{"version":3,"sources":["domain/components/terminal/commands/@cls/index.ts","domain/components/terminal/commands/@help/index.ts","domain/components/terminal/commands/@contact/index.ts","domain/components/terminal/commands/@experiences/index.ts","domain/components/terminal/commands/@skills/index.ts","domain/components/terminal/commands/@picture/index.ts","domain/components/terminal/commands/@bio/index.ts","domain/components/terminal/commands/@42/gol.ts","domain/components/terminal/commands/@42/index.ts","domain/components/terminal/commands/utils/audio_manager.ts","domain/components/terminal/commands/@admin/index.ts","domain/components/terminal/commands/@cat/index.ts","domain/components/terminal/commands/@dog/index.ts","domain/components/terminal/commands/commands.ts","utils/array/limited_array.ts","domain/components/terminal/index.tsx","domain/views/app/index.tsx","reportWebVitals.ts","index.tsx"],"names":["cls","description","execute","args","kwargs","a","setStdout","name","help","length","commands","cmd","maxSize","Object","values","filter","undefined","hidden","map","sort","b","repeat","join","contact","lines","Date","getFullYear","experiences","skills","picture","pushToStd","setTimeout","content","kind","bio","wrap","pos","max","norm","Gol","x","y","current","cordMask","this","createMatrix","width","height","Array","from","fill","row","Math","floor","random","cordA","cordB","cord","reduce","total","mask","isAlive","add","neighbours","numberOfLivingNeighbours","column","cell","newState","replace","clamp","min","fortyTwo","iterations","delay","parseInt","e","console","error","gol","iteration","run","evolve","toString","counter","numberOfStars","round","head","AudioHandler","_audio","audio","instance","admin","getInstance","getAudio","pause","currentTime","setAudio","lastAudio","Audio","process","play","r","cat","dog","limitArray","arr","next","splice","Terminal","props","rootRef","useRef","inputRef","useState","stdout","commandHistory","setCommandHistory","commandHistoryIdx","setCommandHistoryIdx","promptLabel","React","useMemo","useEffect","s","welcomeMessage","isEcho","div","document","getElementById","scrollTop","scrollHeight","clientHeight","command","result","handledCommandResponse","handleCommandResponse","last","handleInput","key","preventDefault","value","cmdString","minimist","_","slice","reverse","stdOut","renderContent","COLORS_REG","nextContent","regexifyString","pattern","decorator","match","index","m","split","v","href","target","rel","style","color","input","ref","className","id","line","src","centered","pixelSize","alt","Fragment","c","id2","onChange","nextHistory","onKeyDown","type","autoComplete","spellCheck","autoCapitalize","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode"],"mappings":"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","file":"static/js/main.de707d92.chunk.js","sourcesContent":["import { ICommand } from \"../../types\";\n\nconst cls: ICommand = {\n    description: \"Clear the screen\",\n    execute: async (args, kwargs, { setStdout }) => {\n        setStdout([]);\n        return null;\n    },\n    name: \"cls\",\n};\n\nexport default cls;\n","import { ICommand } from \"../../types\";\n\nimport commands from '../commands';\n\nconst help: ICommand = {\n    description: \"Show this message. {#FFCB6B}help{/#FFCB6B} {#79DDD9}cmd{/#79DDD9} to get help for a specific command.\",\n    execute: async (args) => {\n        if (args.length === 2) {\n            if (commands[args[1]]) {\n                const cmd = commands[args[1]];\n                return `{#FFCB6B}${cmd.name}{/#FFCB6B} - ${cmd.description}`\n            }\n        }\n\n        const maxSize = Object.values(commands)\n            .filter(cmd => cmd.hidden === undefined || cmd.hidden === false)\n            .map(cmd => cmd.name)\n            .sort((a, b) => b.length - a.length)[0].length;\n        \n        return Object.values(commands)\n            .filter(cmd => cmd.hidden === undefined || cmd.hidden === false)\n            .map(cmd => `{#FFCB6B}${cmd.name}{/#FFCB6B}${\" \".repeat(maxSize - cmd.name.length)} - ${cmd.description}`)\n            .join('\\n');\n    },\n    name: \"help\",\n};\n\nexport default help;\n","import { ICommand } from \"../../types\";\n\nconst contact: ICommand = {\n    description: \"Show my contact\",\n    execute: async () => {\n        const lines: Array<string> = [\n            \"{#79DDD9}Name{/#79DDD9}: ARTISIEN Nathan\",\n            \"{#79DDD9}Location{/#79DDD9}: {#C778C1}Paris, France{/#C778C1}\",\n            `{#79DDD9}Age{/#79DDD9}: ${new Date().getFullYear() - 1997} years old`,\n            \"{#79DDD9}E-Mail{/#79DDD9}: nathan.artisien@gmail.com\",\n            \"{#79DDD9}Phone{/#79DDD9}: (+33) 06.47.48.02.85\",\n            \"{#79DDD9}LinkedIn{/#79DDD9}: {link}https://www.linkedin.com/in/nathan-artisien/{/link}\",\n            \"{#79DDD9}Github{/#79DDD9}: {link}https://github.com/Eoniz/{/link}\",\n            \"{#79DDD9}Website{/#79DDD9}: {link}https://nathan-artisien.me/{/link}\",\n        ];\n\n        return lines.join(\"\\n\");\n    },\n    name: \"contact\",\n};\n\nexport default contact;\n","import { ICommand } from \"../../types\";\n\nconst experiences: ICommand = {\n    description: \"Show my experiences\",\n    execute: async () => {\n        const lines: Array<string> = [\n            \"{#79DDD9}Orness{/#79DDD9} - {#C778C1}Paris, France{/#C778C1} (March 2019 -> Today)\",\n            \"  - Engineer\",\n            \"  - Lead FrontEnd engineer on {#e6d9f8}Dojo{/#e6d9f8}{#b1518e}.Codes{/#b1518e}. A website used to create code fest, and let users practice on programming exercises\",\n            \"  - Worked on {link}https://dojo.codes{/link} v1 as FrontEnd Developer. Orness organized a dev event on this website with ~{#79DDD9}150{/#79DDD9} participants at the same time, and ~{#79DDD9}200{/#79DDD9} registered.\",\n            \"  - Working on {link}https://dojo.codes{/link} v2 as FrontEnd Developer\",\n            \"\",\n            \"{#79DDD9}Société Générale{/#79DDD9} - {#C778C1}La Défense Puteaux, France{/#C778C1} (March 2019 -> Today)\",\n            \"  - FullStack Developer\",\n            \"  - Created multiple APIs\",\n            \"    - Languages: {#FFCB6B}Python{/#FFCB6B}\",\n            \"    - Frameworks: {#FFCB6B}FastAPI{/#FFCB6B}, {#FFCB6B}Flask{/#FFCB6B}\",\n            \"  - Created multiple FrontEnds\",\n            \"    - Languages: {#FFCB6B}TypeScript{/#FFCB6B}, {#FFCB6B}JavaScript{/#FFCB6B}\",\n            \"    - Frameworks: {#FFCB6B}React{/#FFCB6B}, {#FFCB6B}Redux{/#FFCB6B}\",\n            \"  - Supports (legacy {#FFCB6B}VBA{/#FFCB6B} projects and ours)\",\n            \"  - Devops (CI/CD with {#FFCB6B}Jenkins{/#FFCB6B}, {#FFCB6B}Kube{/#FFCB6B}, {#FFCB6B}GitHub{/#FFCB6B})\",\n            \"  - Agile Methodology\",\n            \"\",\n            \"{#79DDD9}Side Projects{/#79DDD9}\",\n            \"  - All my side projects are in my github: {link}https://github.com/Eoniz/{/link}\"\n        ];\n\n        return lines.join(\"\\n\");\n    },\n    name: \"experiences\",\n};\n\nexport default experiences;\n","import { ICommand } from \"../../types\";\n\nconst skills: ICommand = {\n    description: \"Show my skills\",\n    execute: async () => {\n        const lines: Array<string> = [\n            \"{#79DDD9}Frontend{/#79DDD9}\",\n            \"  - Languages: {#FFCB6B}JavaScript{/#FFCB6B} / {#FFCB6B}TypeScript{/#FFCB6B}\",\n            \"  - Frameworks: {#FFCB6B}React{/#FFCB6B} / {#FFCB6B}Redux{/#FFCB6B}\",\n            \"  - Styling: {#FFCB6B}Sass{/#FFCB6B} / {#FFCB6B}Css{/#FFCB6B} / {#FFCB6B}MaterialUI{/#FFCB6B} / {#FFCB6B}Bootstrap{/#FFCB6B}\",\n            \"\",\n            \"{#79DDD9}Backend{/#79DDD9}\",\n            \"  - Languages: {#FFCB6B}Python{/#FFCB6B} / {#FFCB6B}JavaScript{/#FFCB6B} / {#FFCB6B}TypeScript{/#FFCB6B}\",\n            \"  - Frameworks: {#FFCB6B}FastAPI{/#FFCB6B} / {#FFCB6B}NodeJS{/#FFCB6B}\",\n            \"\",\n            \"{#79DDD9}General{/#79DDD9}\",\n            \"  - {#FFCB6B}Git{/#FFCB6B} / {#FFCB6B}Github{/#FFCB6B}\",\n            \"  - {#FFCB6B}TDD{/#FFCB6B} / {#FFCB6B}Domain Driven Design{/#FFCB6B}\",\n            \"  - {#FFCB6B}Agile Method{/#FFCB6B}\",\n            \"  - {#FFCB6B}Figma{/#FFCB6B} / {#FFCB6B}Illustrator{/#FFCB6B}\",\n            \"  - {#FFCB6B}Github Actions{/#FFCB6B}\",\n            \"\",\n            \"{#79DDD9}Other{/#79DDD9}\",\n            \"  - {#FFCB6B}Discord.JS{/#FFCB6B} ( {link}https://discord.js.org/{/link} )\",\n        ];\n\n        return lines.join(\"\\n\");\n    },\n    name: \"skills\",\n};\n\nexport default skills;\n","import { ICommand } from \"../../types\";\n\nconst picture: ICommand = {\n    description: \"Show my head :)\",\n    execute: async (args, kwargs, { pushToStd }) => {\n        setTimeout(() => {\n            pushToStd(undefined, {\n                content: \"🤡 Sorry for the troll 🤡\",\n                kind: \"string\"\n            });\n        }, 1000);\n        return {\n            content: \"https://media-exp1.licdn.com/dms/image/C4D03AQF9UWWRM8bNJg/profile-displayphoto-shrink_200_200/0/1570990655948?e=1628726400&v=beta&t=Hbdy2WCN8lhNWJTCy-lOdfdSEuXncKYpjskVzFPI-ps\",\n            kind: \"img\"\n        }\n    },\n    name: \"picture\",\n};\n\nexport default picture;\n","import { ICommand } from \"../../types\";\n\nconst bio: ICommand = {\n    description: \"Show my bio\",\n    execute: async () => {\n        const lines: Array<string> = [\n            \"Hello !\",\n            \"My name is Nathan, and I am from {#C778C1}Paris, France{/#C778C1}.\",\n            \"I'm currently working as a {#79DDD9}Full Stack Developer{/#79DDD9} at {#C778C1}Orness{/#C778C1} and {#C778C1}Société Générale{/#C778C1}.\",\n            \"I have been working 3 years with {#79DDD9}Python{/#79DDD9}, {#79DDD9}FastAPI{/#79DDD9}, {#79DDD9}React{/#79DDD9}, {#79DDD9}Redux{/#79DDD9}, {#79DDD9}TypeScript{/#79DDD9} and {#79DDD9}JavaScript{/#79DDD9} with a focus on {#79DDD9}APIs{/#79DDD9} and {#79DDD9}FrontEnds{/#79DDD9}.\",\n            \"I enjoy reading, learning new stuff and globally, the crypto world and the tech world :)\",\n            \"Feel free to {#FFCB6B}contact{/#FFCB6B} me ! I will be glad to discuss with you !\"\n        ];\n\n        return lines.join(\"\\n\");\n    },\n    name: \"bio\",\n};\n\nexport default bio;\n","const wrap = (pos: number, max: number) => {\n    let norm = pos;\n\n    if (pos < 0) {\n        norm = max + pos;\n    } else if (pos > max - 1) {\n        norm = pos - norm;\n    }\n    return norm;\n};\n\nconst randomBinary = () => {\n    return Math.floor(Math.random() + 0.2);\n};\n\n\nclass Gol {\n\n    current: Array<Array<number>>;\n    x: number;\n    y: number;\n    cordMask: Array<{x: number, y: number}>;\n\n    constructor(x: number, y: number) {\n        this.current = this.createMatrix(x, y);\n        this.x = x;\n        this.y = y;\n        this.cordMask = [\n            {x: -1, y: -1},\n            {x: -1, y: 0},\n            {x: -1, y: 1},\n            {x: 0, y: -1},\n            {x: 0, y: 1},\n            {x: 1, y: -1},\n            {x: 1, y: 0},\n            {x: 1, y: 1},\n        ];\n    }\n\n    createMatrix(width: number, height: number) {\n        return Array.from({ length: height }, () => new Array(width).fill(0)).map(row => row.map(() => randomBinary()));\n    }\n    \n    add(cordA: { x: number, y: number }, cordB: { x: number, y: number }) {\n        return {\n            x: wrap(cordA.x + cordB.x, this.x),\n            y: wrap(cordA.y + cordB.y, this.y)\n        };\n    }\n\n    isAlive(cord: { x: number, y: number }) {\n        return this.current[cord.y][cord.x];\n    }\n\n    numberOfLivingNeighbours(cord: { x: number, y: number }) {\n        return this.cordMask.reduce((total, mask) => total + this.isAlive(this.add(mask, cord)), 0);\n    }\n\n    newState(cord: { x: number, y: number }) {\n        const neighbours = this.numberOfLivingNeighbours(cord);\n        return this.isAlive(cord)\n            ? neighbours > 3 || neighbours < 2 ? 0 : 1\n            : neighbours !== 3 ? 0 : 1; \n    }\n    evolve() {\n        this.current = this.current.map((column, y) => column.map((cell, x)=> this.newState({x: x, y: y})));\n    }\n\n    toString() {\n        return this.current.reduce((total, row) => total + row.join('').replace(/0/g, '{cyan}.{/cyan}').replace(/1/g, '{#FFCB6B}*{/#FFCB6B}') + '\\n', '');\n    }\n}\n\nexport default Gol;","import { ICommand } from \"../../types\";\nimport Gol from './gol';\n\nconst clamp = (a: number, min: number, max: number) => {\n    if (a < min) {\n        return min;\n    }\n\n    if (a > max) {\n        return max;\n    }\n\n    return a;\n}\n\nconst MIN_WIDTH = 1;\nconst MIN_HEIGHT = 1;\nconst MIN_DELAY = 50;\nconst MIN_ITERATIONS = 1;\n\nconst MAX_WIDTH = 50;\nconst MAX_HEIGHT = 50;\nconst MAX_DELAY = 2000;\nconst MAX_ITERATIONS = 200;\n\nconst DEFAULT_WIDTH = 30;\nconst DEFAULT_ITERATIONS = 10;\nconst DEFAULT_HEIGHT = 10;\nconst DEFAULT_DELAY = 1000;\n\nconst descriptionLines: Array<string> = [\n    \"You found the Game of life 🧬. You have these following options available:\",\n    `   {#FFCB6B}--iterations{/#FFCB6B} {#C778C1}{number}{/#C778C1}: Set the number of iterations {#79DDD9}(default to ${DEFAULT_WIDTH}){/#79DDD9}.`,\n    `   {#FFCB6B}--width{/#FFCB6B} {#C778C1}{number}{/#C778C1}: Grid width (columns) {#79DDD9}(default to ${DEFAULT_WIDTH}){/#79DDD9}.`,\n    `   {#FFCB6B}--height{/#FFCB6B} {#C778C1}{number}{/#C778C1}: Grid height (rows) {#79DDD9}(default to ${DEFAULT_HEIGHT}){/#79DDD9}.`,\n    `   {#FFCB6B}--delay{/#FFCB6B} {#C778C1}{number}{/#C778C1}: Delay between each iterations in ms {#79DDD9}(default to ${DEFAULT_DELAY}){/#79DDD9}.`,\n    \"   \",\n    \"   {#79DDD9}ex:{/#79DDD9} {#7dcc85}~$ {/#7dcc85} 42\",\n    \"   {#79DDD9}ex:{/#79DDD9} {#7dcc85}~$ {/#7dcc85} 42 --width 10 --height 10\",\n    \"   {#79DDD9}ex:{/#79DDD9} {#7dcc85}~$ {/#7dcc85} 42 --iterations 1 --delay 500\",\n]\n\nconst fortyTwo: ICommand = {\n    description: descriptionLines.join(\"\\n\"),\n    hidden: true,\n    execute: async (args, kwargs, { pushToStd }) => {\n        let iterations = DEFAULT_ITERATIONS;\n        let width = DEFAULT_WIDTH;\n        let height = DEFAULT_HEIGHT;\n        let delay = DEFAULT_DELAY;\n\n        if (kwargs[\"iterations\"]) {\n            try {\n                iterations = clamp(parseInt(kwargs[\"iterations\"], 10), MIN_ITERATIONS, MAX_ITERATIONS);\n            } catch (e) { console.error(e) };\n        }\n\n        if (kwargs[\"width\"]) {\n            try {\n                width = clamp(parseInt(kwargs[\"width\"], 10), MIN_WIDTH, MAX_WIDTH);\n            } catch (e) { console.error(e) };\n        }\n\n        if (kwargs[\"height\"]) {\n            try {\n                height = clamp(parseInt(kwargs[\"height\"], 10), MIN_HEIGHT, MAX_HEIGHT);\n            } catch (e) { console.error(e) };\n        }\n\n        if (kwargs[\"delay\"]) {\n            try {\n                delay = clamp(parseInt(kwargs[\"delay\"], 10), MIN_DELAY, MAX_DELAY);\n            } catch (e) { console.error(e) };\n        }\n\n        const gol = new Gol(width, height);\n        let iteration = 0;\n        const run = () => {\n            setTimeout(() => {\n                if (iteration >= iterations) {\n                    return;\n                }\n\n                gol.evolve();\n                const a = gol.toString();\n                const counter = ` ${iteration + 1} / ${iterations} `;\n                const numberOfStars = Math.round(width / 2) - Math.round(counter.length / 2);\n                const head = `${\"*\".repeat(numberOfStars)}${counter}${\"*\".repeat(numberOfStars)}\\n`;\n                pushToStd(undefined, {\n                    content: `${head}${a}`,\n                    kind: \"string\"\n                });\n                run();\n                iteration += 1;\n            }, delay);\n        };\n\n        run();\n\n        return \"👀\";\n    },\n    name: \"42\",\n};\n\nexport default fortyTwo;\n","class AudioHandler {\n    private static instance: AudioHandler;\n\n    private _audio: HTMLAudioElement | null;\n\n    constructor () {\n        this._audio = null;\n    }\n\n    public static getInstance() {\n        if (!AudioHandler.instance) {\n            AudioHandler.instance = new AudioHandler();\n        }\n\n        return AudioHandler.instance;\n    }\n\n    public setAudio(audio: HTMLAudioElement | null) {\n        this._audio = audio;\n    }\n\n    public getAudio() {\n        return this._audio || null;\n    }\n}\n\nexport default AudioHandler;\n","import { ICommand } from \"../../types\";\nimport AudioHandler from '../utils/audio_manager';\n\nconst admin: ICommand = {\n    name: \"admin\",\n    description: \"🔑 Administrate the website 🔑\",\n    execute: async (args, kwargs, { pushToStd }) => {\n        if (args.length === 2 && args[1] === \"stop\") {\n            const audio = AudioHandler.getInstance().getAudio();\n\n            if (audio) {\n                audio.pause();\n                audio.currentTime = 0;\n                AudioHandler.getInstance().setAudio(null);\n            }\n\n            return \"🤡 Sorry for the troll 🤡\";\n        }\n\n        const lastAudio = AudioHandler.getInstance().getAudio();\n        if (lastAudio) {\n            lastAudio.pause();\n        }\n\n        const audio = new Audio(`${process.env.PUBLIC_URL}/sounds/troll.mp3`);\n        AudioHandler.getInstance().setAudio(audio);\n        audio.play();\n\n        setTimeout(() => {\n            pushToStd(undefined, {\n                content: \"What are you doing ? 🧐\",\n                kind: \"string\"\n            });\n        }, 5000);\n\n        setTimeout(() => {\n            pushToStd(undefined, {\n                content: \"It's my favorite part 🕺💃\",\n                kind: \"string\"\n            });\n        }, 10000);\n\n        setTimeout(() => {\n            pushToStd(undefined, {\n                content: \"🤡 Btw, you can stop it by typing {#FFCB6B}admin stop{/#FFCB6B} 🤡\\nMusic by {magenta}Chips 'N Cellos{/magenta}: {link}https://www.youtube.com/watch?v=ZQo8YaG1hhs{/link}, follow him !\",\n                kind: \"string\"\n            });\n        }, 15000);\n\n        return {\n            content: `${process.env.PUBLIC_URL}/img/rickroll.gif`,\n            kind: \"gif\"\n        };\n    },\n};\n\nexport default admin;\n","import { ICommand } from \"../../types\";\n\nconst r = () => {\n    return 200 + Math.floor(Math.random() * 1000);\n}\n\nconst cat: ICommand = {\n    name: \"cat\",\n    description: \"Print a cat 🐈\",\n    hidden: true,\n    execute: async (args, kwargs, { pushToStd }) => {\n        return {\n            content: `https://placekitten.com/${r()}/${r()}`,\n            kind: \"clear-img\"\n        }\n    },\n};\n\nexport default cat;\n","import { ICommand } from \"../../types\";\n\nconst r = () => {\n    return 200 + Math.floor(Math.random() * 1000);\n}\n\nconst dog: ICommand = {\n    name: \"dog\",\n    description: \"Print a dog 🐕\",\n    hidden: true,\n    execute: async (args, kwargs, { pushToStd }) => {\n        return {\n            content: `https://placedog.net/${r()}/${r()}?random`,\n            kind: \"clear-img\"\n        }\n    },\n};\n\nexport default dog;\n","import { ICommand } from \"../types\";\nimport cls from \"./@cls\";\nimport help from \"./@help\";\nimport contact from \"./@contact\";\nimport experiences from \"./@experiences\";\nimport skills from \"./@skills\";\nimport picture from \"./@picture\";\nimport bio from \"./@bio\";\nimport fortyTwo from \"./@42\";\nimport admin from \"./@admin\";\nimport cat from \"./@cat\";\nimport dog from \"./@dog\";\n\nconst commands: Record<string, ICommand> = {\n    [admin.name]: admin,\n    [cls.name]: cls,\n    [help.name]: help,\n    [fortyTwo.name]: fortyTwo,\n    [bio.name]: bio,\n    [contact.name]: contact,\n    [experiences.name]: experiences,\n    [skills.name]: skills,\n    [picture.name]: picture,\n    [cat.name]: cat,\n    [dog.name]: dog,\n};\n\nexport default commands;\n","export const limitArray = <T>(arr: Array<T>, maxSize: number): Array<T> => {\n    const next = [...arr];\n    if (next.length > maxSize) {\n        next.splice(\n            0,\n            next.length - maxSize\n        )\n    }\n\n    return next;\n}\n","import React, { useRef, useState } from 'react'\nimport { ICommand, ICommandResult, IStdLine } from './types';\nimport { limitArray } from '../../../utils/array/limited_array';\n\n// @ts-ignore\nimport minimist from \"minimist-string\";\nimport { ImagePixelated } from \"react-pixelate\"\nimport regexifyString from 'regexify-string';\n\ninterface IProps {\n    promptLabel?: string;\n    commands?: Record<string, ICommand>;\n    welcomeMessage?: string;\n}\n\nconst MAX_STD = 50;\nconst MAX_HISTORY_SIZE = 10;\n\nconst Terminal = (props: IProps) => {\n    const rootRef = useRef(null);\n    const inputRef = useRef<HTMLInputElement>(null);\n\n    const [stdout, setStdout] = useState<Array<IStdLine>>([]);\n    const [commandHistory, setCommandHistory] = useState<Array<string>>([\"\"]);\n    const [commandHistoryIdx, setCommandHistoryIdx] = useState<number>(0);\n    \n    const promptLabel = React.useMemo<string>(() => {\n        return props.promptLabel || '$';\n    }, [props.promptLabel]);\n\n    React.useEffect(() => {\n        setStdout((s: Array<IStdLine>) => {\n            if (!props.welcomeMessage) {\n                return s;\n            }\n\n            const nextStdout: Array<IStdLine> = [\n                ...s,\n                {\n                    kind: \"string\",\n                    content: props.welcomeMessage,\n                    isEcho: false\n                }\n            ];\n            return nextStdout;\n        });\n    }, [props.welcomeMessage]);\n\n    React.useEffect(() => {\n        const div = document.getElementById(\"terminal-content\");\n        if (div) {\n            div.scrollTop = div.scrollHeight - div.clientHeight;\n        }\n    }, [stdout]);\n\n    const pushToStd = (command: string | undefined, result: ICommandResult) => {\n        const handledCommandResponse = handleCommandResponse(result);\n        \n        if (!command) {\n            setStdout((last) => limitArray([\n                ...last,\n                handledCommandResponse\n            ], MAX_STD));\n\n            return;\n        }\n\n        setStdout((last) => limitArray([\n            ...last,\n            {\n                content: command,\n                isEcho: true,\n                kind: \"string\"\n            },\n            handledCommandResponse\n        ], MAX_STD));\n    };\n\n    const handleCommandResponse = (result: ICommandResult): IStdLine => {\n        if (typeof(result) === \"string\") {\n            return {\n                content: result,\n                isEcho: false,\n                kind: \"string\"\n            }\n        }\n\n        return {\n            content: result.content,\n            kind: result.kind,\n            isEcho: false,\n        }\n    }\n\n    const handleInput = async (e: React.KeyboardEvent<HTMLInputElement>) => {\n        if (!inputRef.current) {\n            return;\n        }\n\n        if (e.key === \"ArrowUp\") {\n            e.preventDefault();\n\n            const next = (commandHistoryIdx + 1 >= commandHistory.length) ? commandHistory.length - 1 : commandHistoryIdx + 1;\n            inputRef.current.value = commandHistory[next];\n            setCommandHistoryIdx(next);\n\n            return;\n        }\n\n        if (e.key === \"ArrowDown\") {\n            e.preventDefault();\n\n            const next = (commandHistoryIdx - 1 < 0) ? 0 : commandHistoryIdx - 1;\n            inputRef.current.value = commandHistory[next];\n            setCommandHistoryIdx(next);\n\n            return;\n        }\n\n        if (e.key === \"Enter\") {\n            e.preventDefault();\n            \n            const cmdString = inputRef.current.value;\n            const { _: args, ...kwargs } = minimist(inputRef.current.value);\n\n            setCommandHistory((last) => {\n                return limitArray([\n                    \"\",\n                    cmdString,\n                    ...last.slice(1)\n                ].reverse(), MAX_HISTORY_SIZE).reverse()\n            });\n            setCommandHistoryIdx(0);\n\n            if (props.commands) {\n                if (args[0] in props.commands) {\n                    const command = props.commands[args[0]];\n\n                    const result = await command.execute(\n                        args, \n                        kwargs,\n                        {\n                            stdOut: stdout,\n                            setStdout: setStdout,\n                            pushToStd: pushToStd\n                        }\n                    );\n\n                    if (result) {\n                        pushToStd(inputRef.current.value, result);\n                    }\n                } else {\n                    pushToStd(inputRef.current.value, `command \"${args[0]}\" does not exist.`);\n                }\n            }\n\n\n            inputRef.current.value = \"\";\n\n            return;\n        }\n    };\n\n    const handleInputChanged = (e: React.ChangeEvent<HTMLInputElement>) => {\n        const nextHistory = [...commandHistory];\n        nextHistory[0] = e.target.value;\n        setCommandHistory(limitArray(nextHistory.reverse(), MAX_HISTORY_SIZE).reverse());\n    };\n\n    const renderContent = (content: string) => {\n        const COLORS_REG = /{(.*?)}(.*?){\\/(.*?)}/g;\n        const nextContent = regexifyString({\n            pattern: COLORS_REG,\n            decorator: (match, index) => {\n                const m = match.split(COLORS_REG).filter(v => v !== \"\");\n                if (m[0] === \"link\") {\n                    return (\n                        <a \n                            href={m[1]}\n                            target=\"_blank\"\n                            rel=\"noreferrer\"\n                        >\n                            { m[1] }\n                        </a>\n                    );\n                }\n\n                return <span style={{ color: m[0] }}>{m[1]}</span>;\n            },\n            input: content\n        });\n        \n        return <span>{nextContent}</span>;\n    };\n\n    const getStdout = () => {\n        return stdout.map((line, id) => {\n            if (line.isEcho) {\n                return (\n                    <div key={id} className=\"line\">\n                        <span\n                            className=\"prompt-label\"\n                        >\n                            { promptLabel }\n                        </span>\n                        {\n                            line.content\n                        }\n                    </div>\n                )\n            }\n\n            if (line.kind === \"img\") {\n                return (\n                    <div key={id} className=\"line\">\n                        <ImagePixelated\n                            src={line.content} \n                            width={200}\n                            height={200}\n                            centered\n                            pixelSize={4}\n                        />\n                    </div>\n                )\n            }\n\n            if (line.kind === \"clear-img\") {\n                return (\n                    <div key={id} className=\"line\">\n                        <img\n                            src={line.content}\n                            alt=\"clear img\"\n                            width={300}\n                            height={300}\n                            className=\"terminal-img\"\n                        />\n                    </div>\n                )\n            }\n\n            if (line.kind === \"gif\") {\n                return (\n                    <div key={id} className=\"line\">\n                        <img\n                            src={line.content}\n                            alt=\"gif\"\n                            width={610}\n                            height={610}\n                        />\n                    </div>\n                )\n            }\n\n            return (\n                <React.Fragment key={id}>\n                    {\n                        line.content\n                            .split('\\n')\n                            .map((c, id2) => (\n                                <div key={`${id}-${id2}`} className=\"line\">\n                                    { renderContent(c) }\n                                </div>\n                            ))\n                    }\n                </React.Fragment>\n            )\n        });\n    }\n    \n    return (\n        <div\n            ref={rootRef}\n            className=\"terminal\"\n        >\n            <div\n                className=\"content\"\n                id=\"terminal-content\"\n            >\n                {getStdout()}\n                <div\n                    className=\"input-area\"\n                >\n                    <span\n                        className={\"prompt-label\"}\n                    >\n                        { promptLabel }\n                    </span>\n                    <input\n                        ref={inputRef}\n                        name='terminal-input'\n                        className=\"terminal-input\"\n                        onChange={handleInputChanged}\n                        onKeyDown={handleInput}\n                        type='text'\n                        autoComplete=\"off\"\n                        spellCheck={false}\n                        autoCapitalize={\"off\"}\n                    />\n                </div>\n            </div>\n        </div>\n    )\n};\n\nexport default Terminal;\n","import React from 'react';\n\nimport commands from '../../components/terminal/commands/commands';\nimport Terminal from '../../components/terminal';\n\nconst welcomeMessage = `\n*********************************************************************************************************\n*   ____  ____  _______ ____ _____ ____   _____  ___         ___    ____  ______  __ __   ____  ____    *                                                  \n*  /    ||    \\\\|       ||    / ___/|    ||   __]|    \\\\      |   \\\\  /    ||      ||  |  | /    ||    \\\\   *                                                      \n*  |  o  ||  D  )      | |  (   \\\\_  |  | |  [_  |  _  |    |  _  ||  o  ||      ||  |  ||  o  ||  _  |  *                                                   \n*  |     ||    /|_|  |_| |  |\\\\__  | |  | |   _] |  |  |    |  |  ||     ||_|  |_||  _  ||     ||  |  |  *                                                   \n*  |  _  ||    \\\\  |  |   |  |/  \\\\ | |  | | [__  |  |  |    |  |  ||  _  |  |  |  |  |  ||  _  ||  |  |  *                                                    \n*  |  |  ||  .  \\\\ |  |   |  |\\\\    | |  | |    | |  |  |    |  |  ||  |  |  |  |  |  |  ||  |  ||  |  |  *                                                    \n*  |__|__||__|\\\\_| |__|  |____|\\\\___||____||____| |__|__|    |__|__||__|__|  |__|  |__|__||__|__||__|__|  *\n*********************************************************************************************************                                                  \n\nWelcome to my resume\nHere, you'll find anything about me. To start, you can type {#FFCB6B}help{/#FFCB6B} command\nThere are hidden commands 👀 Feel free to find them 🕵️‍♂️\n`;\n\nconst App = () => {\n    return (\n        <div className=\"root\">\n            <Terminal\n                promptLabel=\"me@resume:~$ \"\n                commands={commands}\n                welcomeMessage={welcomeMessage}\n            />\n        </div>\n    );\n};\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './domain/views/app';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}